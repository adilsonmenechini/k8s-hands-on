apiVersion: v1
kind: Secret
metadata:
  name: nginx-helm-secrets
  labels:
    helm.sh/chart: helm-0.1.0
    app.kubernetes.io/name: helm
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  fake-data: fake-data
---
# Source: helm/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nginx-helm-service
  labels:
    helm.sh/chart: helm-0.1.0
    app.kubernetes.io/name: helm
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
    - port: 5002
      targetPort: 5002
      protocol: TCP
      name: 5002
    - port: 5001
      targetPort: 5001
      protocol: TCP
      name: testport01
    - port: 5003
      targetPort: 5003
      protocol: TCP
      name: testport03
    - port: 5004
      targetPort: 5004
      protocol: TCP
      name: testport04
  selector:
    app.kubernetes.io/name: helm
    app.kubernetes.io/instance: nginx
---
# Source: helm/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-helm
  labels:
    helm.sh/chart: helm-0.1.0
    app.kubernetes.io/name: helm
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: helm
      app.kubernetes.io/instance: nginx
  template:
    metadata:
      labels:
        helm.sh/chart: helm-0.1.0
        app.kubernetes.io/name: helm
        app.kubernetes.io/instance: nginx
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      imagePullSecrets:
        - name: nexus-auth
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: helm
          securityContext:
            {}
          imagePullPolicy: Always
          image: "__IMAGE-REPOSITORY__:latest"     
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - containerPort: 5002
              protocol: TCP
              name: 5002
            - containerPort: 5001
              protocol: TCP
              name: testport01
            - containerPort: 5003
              protocol: TCP
              name: testport03
            - containerPort: 5004
              protocol: TCP
              name: testport04
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 150m
              memory: 128Mi
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health/liveness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/readiness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 10
          envFrom:
          - secretRef:
              name: nginx-helm-secrets
          env:
          - name: ASPNETCORE_ENVIRONMENT
            value: "Development"
      nodeSelector:
        agentpool: AKS-Exemplo